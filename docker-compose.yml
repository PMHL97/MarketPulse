services:
  postgres-users:
    image: postgres:14-alpine
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
      POSTGRES_DB: marketpulse_users
    volumes:
      - postgres_users_data:/var/lib/postgresql/data

  postgres-articles:
    image: postgres:14-alpine
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
      POSTGRES_DB: marketpulse_articles
    volumes:
      - postgres_articles_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"

  user-service:
    build: ./backend/user-service
    ports:
      - "8082:8080"
    environment:
      spring.datasource.url: jdbc:postgresql://postgres-users:5432/marketpulse_users
      spring.datasource.username: your_db_user
      spring.datasource.password: your_db_password
    depends_on:
      - postgres-users

  article-storage-service:
    build: ./backend/article-storage-service
    ports:
      - "8083:8080"
    environment:
      spring.datasource.url: jdbc:postgresql://postgres-articles:5432/marketpulse_articles
      spring.datasource.username: your_db_user
      spring.datasource.password: your_db_password
      spring.redis.host: redis
    depends_on:
      - postgres-articles
      - redis

  analysis-service:
    build: ./backend/analysis-service
    ports:
      - "5002:5001"
    environment:
      REDIS_HOST: redis
      ARTICLE_BATCH_SIZE: 15
      # NEWS_API_KEY: YOUR_REAL_API_KEY
    depends_on:
      - redis

  # Frontend will run via npm run dev (Vite) on port 3001
  # The backend services will be available for the frontend to consume

volumes:
  postgres_users_data:
  postgres_articles_data:
