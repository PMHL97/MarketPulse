name: Java Microservices CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/user-service/**'
      - 'backend/article-storage-service/**'
      - '.github/workflows/java-services-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/user-service/**'
      - 'backend/article-storage-service/**'

jobs:
  test-user-service:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Test User Service
      working-directory: ./backend/user-service
      run: |
        mvn clean compile
        mvn test --batch-mode --fail-at-end
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: User Service Tests
        path: backend/user-service/target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Build User Service
      working-directory: ./backend/user-service
      run: mvn clean package -DskipTests
      
    - name: Upload User Service JAR
      uses: actions/upload-artifact@v4
      with:
        name: user-service-jar
        path: backend/user-service/target/*.jar

  test-article-service:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Test Article Storage Service
      working-directory: ./backend/article-storage-service
      run: |
        mvn clean compile
        mvn test --batch-mode --fail-at-end
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Article Service Tests
        path: backend/article-storage-service/target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Build Article Storage Service
      working-directory: ./backend/article-storage-service
      run: mvn clean package -DskipTests
      
    - name: Upload Article Service JAR
      uses: actions/upload-artifact@v4
      with:
        name: article-service-jar
        path: backend/article-storage-service/target/*.jar

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run security scan on User Service
      working-directory: ./backend/user-service
      run: mvn org.owasp:dependency-check-maven:check
      
    - name: Run security scan on Article Service
      working-directory: ./backend/article-storage-service
      run: mvn org.owasp:dependency-check-maven:check

  build-docker-images:
    runs-on: ubuntu-latest
    needs: [test-user-service, test-article-service]
    if: github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        service: [user-service, article-storage-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push ${{ matrix.service }}
      uses: docker/build-push-action@v5
      with:
        context: ./backend/${{ matrix.service }}
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/marketpulse-${{ matrix.service }}:latest
          ${{ secrets.DOCKER_USERNAME }}/marketpulse-${{ matrix.service }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
